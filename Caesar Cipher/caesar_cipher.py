# -*- coding: utf-8 -*-
"""Caesar Cipher.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eeUtu_AxrPicQrnDXs-LCXy_vaPlXV02

# Caesar Cipher
"""

class CaesarCipher:
  '''
  Caesar Cipher a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet. 
  '''
  def encrypt(self, text, shift):
    '''
    Input : Characters A-Z and spaces, Shift : Any Positive or Negative Integer, Output: Cipher Text
    '''
    cipher = ""
    for i in range(len(text)):
      if text[i] != " ":
        if (ord(text[i]) + shift <= 90) and (65 <= ord(text[i]) + shift):
          cipher += chr(ord(text[i]) + shift)
        elif 65 > ord(text[i]) + shift:
          diff = 65 - (ord(text[i]) + shift)
          cipher += chr(91-diff)
        else:
          cipher += chr(64 + (ord(text[i]) + shift)%90)
      else:
        cipher += " "
    return cipher

  def get_key(self, text, cipher):
    '''
    Returns key else returns -1 if cipher has a different encryption or text length varies from cipher text length
    '''
    if len(text) == len(cipher):
      text = text.replace(" ", "")
      cipher = cipher.replace(" ","")
      diff = ord(text[0]) - ord(cipher[0]) if ord(cipher[0]) < ord(text[0]) else ord(cipher[0]) - ord(text[0])
      i = 1
      while i < len(text):
        new_diff = ord(text[i]) - ord(cipher[i]) if ord(cipher[i]) < ord(text[i]) else ord(cipher[i]) - ord(text[i])
        if new_diff != diff:
          print("Not Caesar Encryption!")
          return -1
        i += 1
      return diff    
    else:
      print("Incorrect Parameters!")
      return -1

caesar_cipher = CaesarCipher()
text = "SECURITY IS IMPORTANT"
print(text)

for i in range(0, 13):
  print(caesar_cipher.encrypt(text, i))

cipher = caesar_cipher.encrypt(text, 13)
print(cipher)

for i in range(-1, -6, -1):
  print(caesar_cipher.encrypt(text, i))

print(caesar_cipher.get_key(text, cipher))

print(caesar_cipher.get_key(text, "KEY"))

print(caesar_cipher.get_key(text, "FRPHEVGR VF VZCBEGNAG"))